Big Bird: Jun Hong Wang, Raven (Ruiwen) Tang, Michael Kamela
APCS pd6
L09: Some Folks Call It A Charades / working through the College Board Celebrity lab
2022-04-27
time spent: 3.0 hrs

DISCO:
* A "hat" object isn't necessarily needed since the hat could just be an array(list).
* A foundational/default Celebrity is established before developing subclasses.
* GUI functionality is best left towards the end. It's okay to slot it down the to do list if implementation feels unrealistic or confusing. It may be more productive to work on other aspects, like the actual logic of the program, first. However, GUI functionality is still important to test.
* It can be helpful to try compiling and executing files on different computers. When we originally attempted to run CelebrityRunner, Jun Hong's computer showed no windows opening up, while Raven's computer made a brief attempt to open an application, after which the application icon disappeared.

QCC:
* As long as a clue doesn't mention the celebrity's name, it's valid?
* Is there a length limit on a clue?
* ~~How will we make the game have a reader and a guesser? Pass and play?~~
  * The "reader" will input a celebrity using a constructor with both the name and the clue at the beginning. Then the guesser will play the game.
* We noticed that when we compile CelebrityPanel, we get multiple class files. There's CelebrityPanel, as well as four other classes (CelebrityPanel$1-4). We think these come from the nested methods inside of the class.

Activity 1:
1) A celebrity class, game class, (hat class)
2) points, array(list) of celebrities
3) play game, update score, choose next celebrity, add/remove celebrity, checking if clue valid, check guess correctness
4) we think all of these can be put into methods because they all work with the instance variables we plan to have
5) play method should have a way to add celebrity names at the beginning
start game
start timer
in loop until timer stops?
  choose next celebrity
  reader: give clue
  guesser: take input for guesses
  check correctness
    if correct, discard celebrity
    update score
return score
end game
6) using a combination lock as an example for a real-world object, the information it has could be the correct code as well as user input
behaviors could be checking if numbers are correct, and unlocking/locking
7) skip?

Activity 2:
1) to create new instance of that object, initialize instance vars
2) public ClassName(optional parameters) {}
3) String name
depending on if game is multiplayer, String clue might exist
(upon looking at code, we noticed that clue is built in, and the clue is inputted in constructor)
4) accessor methods for name and clue
constructor with name and clue as parameters
5) completed class
6) made test cases
7) we only have a single constructor, but an additional constructor could be
public Celebrity() {}
which just declares the variables name and clue to a default value instead of user inputted values

Activity 3:
1) we chose the JComponent class
if cursor is paused over a component, a string is displayed in a small window near the component
when a key is pressed, the component will react
the setBorder method can change the look of the component
the setLookAndFeel method under UIManager can change the look and feel
2) private ArrayList<Celebrity> celebGameList;
3) the visibility of gameCelebrity should match that of celebGameList, as instance variables should be private (preferred)
4) in file
5) in file
